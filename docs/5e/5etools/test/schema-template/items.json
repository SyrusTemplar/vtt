{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "items.json",
	"version": "1.12.1",
	"type": "object",
	"$defs": {
		"itemData": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"$ref": "items-shared.json#/$defs/itemType"
				},
				"typeAlt": {
					"$ref": "items-shared.json#/$defs/itemType"
				},
				"rarity": {
					"$ref": "items-shared.json#/$defs/itemRarity"
				},
				"source": {
					"type": "string"
				},
				"page": {"$ref": "util.json#/$defs/page"},
				"additionalSources": {
					"$ref": "util.json#/$defs/additionalSources"
				},
				"baseItem": {
					"type": "string"
				},
				"ac": {
					"type": "integer"
				},
				"age": {
					"$ref": "items-shared.json#/$defs/itemAge"
				},
				"ammunition": {
					"type": "boolean",
					"description": "An item that uses ammunition; not an item that is ammunition."
				},
				"axe": {
					"type": "boolean"
				},
				"carryingCapacity": {
					"type": "integer",
					"description": "Of a mount/beast, not a container."
				},
				"dmg1": {
					"type": "string"
				},
				"dmg2": {
					"type": "string",
					"description": "The versatile or alternative damage dice of the weapon, e.g. \"1d10\""
				},
				"dmgType": {
					"$ref": "util.json#/$defs/dataDamageTags"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "entry.json"
					}
				},
				"additionalEntries": {
					"type": "array",
					"items": {
						"$ref": "entry.json"
					}
				},
				"property": {
					"$ref": "items-shared.json#/$defs/itemProperty"
				},
				"range": {
					"type": "string"
				},
				"reload": {
					"type": ["string", "integer"]
				},
				"reqAttune": {
					"type": ["string", "boolean"]
				},
				"reqAttuneAlt": {
					"description": "Used for filtering.",
					"type": ["string", "boolean"]
				},
				"curse": {
					"type": "boolean"
				},
				"vulnerable": {
					"$ref": "util.json#/$defs/damageVulnerabilityArray"
				},
				"resist": {
					"$ref": "util.json#/$defs/damageResistArray"
				},
				"immune": {
					"$ref": "util.json#/$defs/damageImmunityArray"
				},
				"conditionImmune": {
					"$ref": "util.json#/$defs/conditionImmunityArray"
				},
				"detail1": {
					"description": "A descriptive field that can be used to complete entries in variants.",
					"type": "string"
				},
				"scfType": {
					"$ref": "items-shared.json#/$defs/itemScfType"
				},
				"speed": {
					"type": "integer"
				},
				"stealth": {
					"type": "boolean"
				},
				"strength": {
					"type": ["string", "null"]
				},
				"dexterityMax": {
					"description": "Maximum dexterity modifier for medium armor.",
					"type": ["integer", "null"]
				},
				"sword": {
					"type": "boolean"
				},
				"firearm": {
					"type": "boolean"
				},
				"staff": {
					"description": "Adds the italicized \"Staff\" text to the item info line (below the name).",
					"type": "boolean"
				},
				"tier": {
					"$ref": "items-shared.json#/$defs/itemTier"
				},
				"value": {
					"description": "In copper pieces.",
					"type": ["number", "null"]
				},
				"valueMult": {
					"type": "number"
				},
				"weapon": {
					"type": "boolean"
				},
				"weaponCategory": {
					"$ref": "items-shared.json#/$defs/itemWeaponCategory"
				},
				"weight": {
					"type": "number"
				},
				"weightMult": {
					"type": "number"
				},
				"weightNote": {
					"type": "string"
				},
				"wondrous": {
					"type": "boolean"
				},
				"tattoo": {
					"type": "boolean"
				},
				"sentient": {
					"type": "boolean"
				},
				"poison": {
					"type": "boolean"
				},
				"poisonTypes": {
					"type": "array",
					"items": {
						"type": "string",
						"$$ifSiteElse_key": {
							"keySite": "enum",
							"keyBrew": "examples",
							"value": ["contact", "ingested", "injury", "inhaled"]
						}
					}
				},
				"crew": {
					"type": "integer"
				},
				"crewMin": {
					"description": "For crews specified as an X-Y min-max.",
					"type": "integer"
				},
				"crewMax": {
					"description": "For crews specified as an X-Y min-max.",
					"type": "integer"
				},
				"capPassenger": {
					"type": "integer"
				},
				"capCargo": {
					"type": "number"
				},
				"vehSpeed": {
					"type": "number"
				},
				"vehAc": {
					"type": "integer"
				},
				"vehHp": {
					"type": "integer"
				},
				"vehDmgThresh": {
					"type": "integer"
				},
				"travelCost": {
					"description": "In copper pieces per mile per passenger.",
					"type": "integer"
				},
				"shippingCost": {
					"description": "In copper pieces per 100 lbs per mile.",
					"type": "integer"
				},
				"charges": {
					"type": ["string", "integer"]
				},
				"recharge": {
					"$ref": "items-shared.json#/$defs/itemRecharge"
				},
				"rechargeAmount": {
					"$ref": "items-shared.json#/$defs/itemRechargeAmount"
				},
				"optionalfeatures": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"attachedSpells": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"items": {
					"description": "This is required for itemGroup entries.",
					"type": "array",
					"minItems": 1,
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"ability": {
					"description": "Item ability score adjustments.",
					"type": "object",
					"properties": {
						"choose": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"from": {
										"type": "array",
										"items": {
											"enum": [
												"str",
												"dex",
												"con",
												"int",
												"wis",
												"cha"
											]
										},
										"uniqueItems": true
									},
									"count": {"type": "integer"},
									"amount": {"type": "integer"}
								},
								"required": ["from"],
								"additionalProperties": false
							}
						},
						"static": {
							"type": "object",
							"properties": {
								"str":  {"type": "integer"},
								"dex": {"type": "integer"},
								"con":  {"type": "integer"},
								"int": {"type": "integer"},
								"wis":  {"type": "integer"},
								"cha": {"type": "integer"}
							},
							"additionalProperties": false
						},
						"str":  {"type": "integer"},
						"dex": {"type": "integer"},
						"con":  {"type": "integer"},
						"int": {"type": "integer"},
						"wis":  {"type": "integer"},
						"cha": {"type": "integer"}
					}
				},
				"focus": {
					"description": "Item can be used as a spellcasting focus",
					"oneOf": [
						{
							"type": "boolean"
						},
						{
							"type": "array",
							"items": {
								"type": "string",
								"$$ifSiteElse_key": {
									"keySite": "enum",
									"keyBrew": "examples",
									"value": ["Artificer", "Bard", "Cleric", "Druid", "Paladin", "Ranger", "Sorcerer", "Warlock", "Wizard"]
								}
							}
						}
					]
				},
				"lootTables": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"critThreshold": {
					"type": "integer"
				},
				"bonusAc": {
					"type": "string"
				},
				"bonusWeapon": {
					"type": "string"
				},
				"bonusWeaponAttack": {
					"type": "string"
				},
				"bonusWeaponDamage": {
					"type": "string"
				},
				"bonusWeaponCritDamage": {
					"type": "string"
				},
				"bonusSpellAttack": {
					"type": "string"
				},
				"bonusSpellDamage": {
					"type": "string"
				},
				"bonusSpellSaveDc": {
					"type": "string"
				},
				"bonusSavingThrow": {
					"type": "string"
				},
				"bonusAbilityCheck": {
					"type": "string"
				},
				"bonusProficiencyBonus": {
					"type": "string"
				},
				"modifySpeed": {
					"$ref": "items-shared.json#/$defs/itemModifySpeed"
				},
				"otherSources": {
					"$ref": "util.json#/$defs/otherSources"
				},
				"srd": {
					"$ref": "util.json#/$defs/srd"
				},
				"basicRules": {
					"$ref": "util.json#/$defs/basicRules"
				},
				"packContents": {
					"type": "array",
					"items": {
						"oneOf": [
							{
								"type": "string"
							},
							{
								"type": "object",
								"properties": {
									"special": {
										"type": "string"
									},
									"quantity": {
										"type": "integer"
									}
								},
								"additionalProperties": false,
								"required": ["special"]
							},
							{
								"type": "object",
								"properties": {
									"item": {
										"type": "string"
									},
									"quantity": {
										"type": "integer"
									}
								},
								"additionalProperties": false,
								"required": ["item", "quantity"]
							}
						]
					}
				},
				"atomicPackContents": {
					"description": "If the item's pack contents should be treated as one atomic unit, rather than handled as individual sub-items.",
					"type": "boolean"
				},
				"containerCapacity": {
					"type": "object",
					"properties": {
						"weight": {
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"item": {
							"type": "array",
							"items": {
								"type": "object",
								"patternProperties": {
									".*": {
										"type": "integer"
									}
								},
								"additionalProperties": false
							}
						},
						"weightless": {
							"description": "If the container renders its contents weightless.",
							"type": "boolean"
						}
					},
					"additionalProperties": false
				},
				"ammoType": {
					"$ref": "items-shared.json#/$defs/itemAmmoType"
				},
				"grantsProficiency": {
					"type": "boolean"
				},
				"spellScrollLevel": {"type": "integer"},
				"seeAlsoVehicle": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "UIDs of \"vehicle\"s to be linked in a \"See Also\" footnote.\nEx.: \"rowboat|gos\"."
					}
				},
				"reqAttuneTags": {
					"$ref": "util.json#/$defs/reqAttuneTags"
				},
				"reqAttuneAltTags": {
					"$ref": "util.json#/$defs/reqAttuneTags"
				},
				"miscTags": {
					"type": "array",
					"items": {
						"description": "CF/W: Creates Food/Water",
						"enum": ["CF/W"]
					}
				},
				"hasFluff": {"type": "boolean"},
				"hasFluffImages": {"type": "boolean"},
				"hasRefs": {
					"type": "boolean",
					"description": "Whether this item has references within its data to dedicated \"itemEntry\"s."
				},

				"$$ifBrew": {
					"acSpecial": {
						"description": "Free text field for homebrew use.",
						"type": "string"
					},
					"currencyConversion": {
						"description": "ID of a value conversion table. Homebrew only.",
						"type": "string"
					},
					"alCertificateId": {
						"description": "Adventurers League item certificate ID; for use in homebrew.",
						"type": "string"
					},
					"foundryType":{
						"description": "Homebrew only: used to manually specify the exact Foundry item type an item should be imported as. \n\"CONFIG.Item.typeLabels\" correct as of Foundry v0.8.9",
						"type": "string",
						"enum": ["weapon", "equipment", "consumable", "tool", "loot", "class", "spell", "feat", "backpack"]
					},
					"foundrySystem": {"$ref": "util.json#/$defs/foundrySystemObject"},
					"foundryFlags": {"$ref": "util.json#/$defs/foundryFlagsObject"},
					"foundryEffects": {"$ref": "util.json#/$defs/foundryEffectsArray"},
					"foundryImg": {"$ref": "util.json#/$defs/foundryImg"},
					"fluff": {
						"$ref": "items-shared.json#/$defs/fluff"
					}
				}
			},
			"$$ifSite": {
				"additionalProperties": false
			},
			"$$ifBrew": {
				"additionalProperties": {
					"type": [
						"boolean",
						"integer",
						"string"
					]
				}
			}
		},

		"item": {
			"anyOf": [
				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/$defs/itemData"
						},
						{
							"required": [
								"name",
								"rarity",
								"source"
							]
						}
					]
				},
				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/$defs/itemData"
						},
						{
							"$ref": "util.json#/$defs/copyBlock"
						}
					]
				}
			]
		}
	},
	"properties": {
		"item": {
			"type": "array",
			"items": {
				"$ref": "#/$defs/item"
			},
			"uniqueItems": true,
			"minItems": 1
		},
		"itemGroup": {
			"description": "Used to create fake item entries for groups of related items, often referred to as a single item (e.g. arcane foci)",
			"type": "array",
			"items": {
				"type":"object",
				"$ref": "#/$defs/item",
				"oneOf": [
					{
						"required": [
							"items"
						]
					},
					{
						"required": [
							"_copy"
						]
					}
				]
			},
			"uniqueItems": true,
			"minItems": 1
		},
		"_meta": {
			"$ref": "util.json#/$defs/metaBlock"
		}
	},
	"additionalProperties": false
}
