<HTML>


<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<HEAD>
<TITLE>Player Choice-- Initial Wizard Spells (Dungeon Master Guide)</TITLE>
<script src="jscripts.js"></script><link rel="stylesheet" href="toc.css"></HEAD><BODY>
<FONT COLOR="#ff0000" SIZE="5">Player Choice
<P></P>
</FONT><FONT SIZE="3">
<P></P>
The simplest way to give a wizard spells is to throw the ball back into the
player's court--ask him what spells he would like. As he names a spell, have him
roll to see if his character can learn it. If he can, the player writes the
spell on his character sheet. If he can't, one of you should note that he cannot
learn that spell.
<P></P>
Keep doing this until all the 1st-level spells have been checked or until the
character reaches the maximum number of spells his character is allowed to
learn (depending on the character's Intelligence). This allows the player to get
the spells he wants for his character, which usually makes the player happy.
However, it has some drawbacks.
<P></P>
First, players tend to pick the spells they consider the most powerful. While
this is not bad if you have only one or two wizards, a whole horde of the
fellows, all with identical spells, gets pretty boring.
<P></P>
There is also a chance the character will overlook some basic spells he really
needs to function as a wizard--<I>read magic</I> and <I>detect magic</I>, in particular. A wizard who cannot read a magical scroll is deprived of one
of the important abilities of his class.
<P></P>
There is even a slim chance the character will hardly get any spells. And,
while there is no minimum number of spells a character must know, a wizard without
spells is hardly the type of character a player wants. If this happens, give
the poor player a break and allow him to make some second checks on spells until
you believe he has an adequate number.
<P></P>
<P></P>
<A HREF="DD00183.htm#dc24ea2a"></A></FONT><FONT COLOR="#008000" SIZE="3"><A HREF="DD00183.htm#dc24ea2a">Table of Contents</A></FONT>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="#" onclick="history.back()">Go Back</a>
</BODY>
</HTML>
